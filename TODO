General
** Move m_framebuffers into Application base class - everything uses this, don't need to set it up individually
** Fix flipped y-axis in Vulkan viewport
** Camera movement/controls/use of Camera class for all Apps
** Get CameraController to respect initial camera orientation (extract initial pitch and heading)
** Implement an orbit camera mode

Demo bugs/improvements
Displacement - Investigate/fix busted rendering in DX12 on AMD (compiling with dxc)
** StencilBuffer - Fix busted StencilBuffer outline in VK
ComputeNBody - Figure out how to do an *exact* VS/GS replacement for gl_pointsize

General bugs/improvements
Standardize naming in shaders (e.g. pos vs position, uv vs texcoord, etc)
Handle window resizing, etc.
Use inverted Z in all demos
Fix DX12 constant buffer Create() w/ initial data (use DisplacementApp m_hsConstantBuffer as easy test)
Cleanup both GraphicsDevices to explicitly support 2 roles
  * Initial API setup
  * API creation
Refactor command context recycling to use fences explicitly
Refactor/replace math library
Add logging to shader compiler
Make a few basic shaders for meshes that can be re-used.
Camera focus on bounding box, bounding sphere

Debug rendering
Lines, grid, text in 3d space
Vectors
Bounding boxes
Debug console

Vulkan refactor
Replace HandleVk with RefCountingVk
Use an explicit loader/dispatcher for all Vk API calls
Always enable all available features (VkPhysicalDeviceFeatures2)
Refactor extension handling
Autogenerate loader/dispatcher, refcounting, extensions from vulkan registry xml
