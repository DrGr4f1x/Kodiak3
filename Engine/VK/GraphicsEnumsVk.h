//
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
// Author:  David Elder
//

#pragma once

namespace Kodiak
{

enum class ResourceState
{
	Undefined = -1,
	Common,
	VertexBuffer,
	IndexBuffer,
	ConstantBuffer,
	Clear,
	RenderTarget,
	UnorderedAccess,
	DepthWrite,
	DepthRead,
	NonPixelShaderResource,
	PixelShaderResource,
	StreamOut,
	IndirectArgument,
	CopyDest,
	CopySource,
	ResolveDest,
	ResolveSource,
	GenericRead,
	Present,
	Predication
};

template <> struct EnableBitmaskOperators<ResourceState> { static const bool enable = true; };


enum class Format
{
	Unknown = VK_FORMAT_UNDEFINED,
	B4G4R4A4_UNorm = VK_FORMAT_B4G4R4A4_UNORM_PACK16,
	B5G6R5_UNorm = VK_FORMAT_B5G6R5_UNORM_PACK16,
	B5G5R5A1_UNorm = VK_FORMAT_B5G5R5A1_UNORM_PACK16,
	B8G8R8A8_UNorm = VK_FORMAT_B8G8R8A8_UNORM,
	R8_UNorm = VK_FORMAT_R8_UNORM,
	R8_SNorm = VK_FORMAT_R8_SNORM,
	R8_UInt = VK_FORMAT_R8_UINT,
	R8_SInt = VK_FORMAT_R8_SINT,
	R8G8_UNorm = VK_FORMAT_R8G8_UNORM,
	R8G8_SNorm = VK_FORMAT_R8G8_SNORM,
	R8G8_UInt = VK_FORMAT_R8G8_UINT,
	R8G8_SInt = VK_FORMAT_R8G8_SINT,
	R8G8B8A8_UNorm = VK_FORMAT_R8G8B8A8_UNORM,
	R8G8B8A8_UNorm_SRGB = VK_FORMAT_R8G8B8A8_SRGB,
	R8G8B8A8_SNorm = VK_FORMAT_R8G8B8A8_SNORM,
	R8G8B8A8_UInt = VK_FORMAT_R8G8B8A8_UINT,
	R8G8B8A8_SInt = VK_FORMAT_R8G8B8A8_SINT,
	R9G9B9E5_Float = VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
	R16_UNorm = VK_FORMAT_R16_UNORM,
	R16_SNorm = VK_FORMAT_R16_SNORM,
	R16_UInt = VK_FORMAT_R16_UINT,
	R16_SInt = VK_FORMAT_R16_SINT,
	R16_Float = VK_FORMAT_R16_SFLOAT,
	R16G16_UNorm = VK_FORMAT_R16G16_UNORM,
	R16G16_SNorm = VK_FORMAT_R16G16_SNORM,
	R16G16_UInt = VK_FORMAT_R16G16_UINT,
	R16G16_SInt = VK_FORMAT_R16G16_SINT,
	R16G16_Float = VK_FORMAT_R16G16_SFLOAT,
	R16G16B16A16_UNorm = VK_FORMAT_R16G16B16A16_UNORM,
	R16G16B16A16_SNorm = VK_FORMAT_R16G16B16A16_SNORM,
	R16G16B16A16_UInt = VK_FORMAT_R16G16B16A16_UINT,
	R16G16B16A16_SInt = VK_FORMAT_R16G16B16A16_SINT,
	R16G16B16A16_Float = VK_FORMAT_R16G16B16A16_SFLOAT,
	R32_UInt = VK_FORMAT_R32_UINT,
	R32_SInt = VK_FORMAT_R32_SINT,
	R32_Float = VK_FORMAT_R32_SFLOAT,
	R32G32_UInt = VK_FORMAT_R32G32_UINT,
	R32G32_SInt = VK_FORMAT_R32G32_SINT,
	R32G32_Float = VK_FORMAT_R32G32_SFLOAT,
	R32G32B32_UInt = VK_FORMAT_R32G32B32_UINT,
	R32G32B32_SInt = VK_FORMAT_R32G32B32_SINT,
	R32G32B32_Float = VK_FORMAT_R32G32B32_SFLOAT,
	R32G32B32A32_UInt = VK_FORMAT_R32G32B32A32_UINT,
	R32G32B32A32_SInt = VK_FORMAT_R32G32B32A32_SINT,
	R32G32B32A32_Float = VK_FORMAT_R32G32B32A32_SFLOAT,
	R11G11B10_Float = VK_FORMAT_B10G11R11_UFLOAT_PACK32,
	R10G10B10A2_UNorm = VK_FORMAT_A2R10G10B10_UNORM_PACK32,

	D16_UNorm = VK_FORMAT_D16_UNORM,
	D24S8 = VK_FORMAT_D24_UNORM_S8_UINT,
	D32_Float = VK_FORMAT_D32_SFLOAT,
	D32_Float_S8_UInt = VK_FORMAT_D32_SFLOAT_S8_UINT,
};

Format MapVulkanFormatToEngine(VkFormat format);

} // namespace Kodiak